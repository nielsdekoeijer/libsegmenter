name: Build and Upload Wheels

on:
  push:
    branches:
      - main

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
      fail-fast: true # Continue on failure to ensure all possible wheels are built

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 
      uses: actions/setup-python@v2

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  upload-wheels:
    needs: build-wheels
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/download-artifact@v2
      with:
        path: dist

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'  # Python version for upload doesn't need to match matrix

    - name: Install twine
      run: python -m pip install twine

    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload --repository-url https://upload.pypi.org/legacy/ dist/* --verbose
